from typing import Tuple, Dict, Any, Literal


def main() -> None: ...
def extract_args() -> Tuple[Dict, bool]: ...
def execute_command(args: Dict, do:bool, json_file: str) -> None:  ...
def get_data(json_file: str) -> Dict: ...
def get_id(data: Dict) -> int: ...
def write_to_json(file_name: str, data: Dict) -> None: ...
def add_task(item: str, task_id: int, data: Dict, json_file: str) -> None: ...
def add_description(description: str, task_id: int, data: Dict, json_file: str) -> None: ...
def delete_task(task_id: int, data: Dict, json_file: str) -> None: ...
def update_task(task_id: int, new_task: str, data: Dict, json_file: str) -> None: ...
def sort_dict_data(task_dict: Tuple[str, Dict[str, Any]]) -> None: ...
def list_tasks(data: Dict, status: Literal["all", "in-progress", "done", "todo"]) -> int: ...
def mark_task(data: Dict, task_id: int, new_status: Literal["in-progress", "done", "todo"], json_file: str) -> None: ...
def report_error(message: str, error_type: str | None = None) -> None: ...
